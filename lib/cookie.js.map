{"version":3,"sources":["../src/cookie.js"],"names":["decode","s","replace","decodeURIComponent","cookieHandler","key","value","attributes","document","Error","write","undefined","read","path","expires","Date","getTime","toUTCString","r","JSON","stringify","test","e","encodeURIComponent","String","stringifiedAttributes","attributeName","split","cookie","i","jar","Object","create","cookies","l","length","json","parts","slice","join","charAt","name","cookieVal","parse","module","exports","get","getJSON","set","remove"],"mappings":"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","file":"cookie.js","sourcesContent":["function decode(s){\n  return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n}\n\nfunction cookieHandler(key, value, attributes){\n  if (!document){\n    return new Error('Not Found document')\n  }\n  const write = (value !== 'json' && value !== undefined) || attributes !== undefined;\n  const read = !write;\n  if (write){\n    if (!attributes.path){\n      attributes.path = '/';\n    }\n    if (typeof attributes.expires === 'number'){\n      attributes.expires = new Date(new Date().getTime() + attributes.expires * 86400000);\n    }\n    attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n    try{\n      const r = JSON.stringify(value);\n      if (/^[\\{\\[]/.test(r)){\n        value = r;\n      }\n    }catch(e){}\n    value = encodeURIComponent(String(value));\n    key = encodeURIComponent(String(key));\n    let stringifiedAttributes = '';\n    for (let attributeName in attributes){\n      if (!attributes[attributeName]){\n        continue;\n      }\n      stringifiedAttributes += '; ' + attributeName;\n      if (attributes[attributeName] === true){\n        continue;\n      }\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n    return document.cookie = key + '=' + value + stringifiedAttributes;\n  } \n  if (read){\n    let i = 0;\n    const jar = Object.create(null);\n    const cookies = document.cookie ? document.cookie.split('; ') : [];\n    const l = cookies.length;\n    const json = value === 'json';\n    for (; i < l; i ++){\n      const parts = cookies[i].split('=');\n      let cookie = parts.slice(1).join('=');\n      if (!json && cookie.charAt(0) === '\"'){\n        cookie = cookie.slice(1, -1);\n      }\n      try{\n        const name = decode(parts[0]);\n        let cookieVal = decode(cookie);\n        if (json){\n          try{\n            cookieVal = JSON.parse(cookie)\n          } catch(e){}\n        }\n        jar[name] = cookieVal;\n      }catch(e){}\n    }\n    return key ? jar[key] : jar;\n  }\n}\n\nmodule.exports = {\n  get(key){\n    return cookieHandler(key);\n  },\n  getJSON(key){\n    return cookieHandler(key, 'json');\n  },\n  set(key, value, attributes={}){\n    return cookieHandler(key, value, attributes);\n  },\n  remove(key, attributes={}){\n    attributes.expires = -1;\n    return cookieHandler(key, '', attributes)\n  }\n}"]}